{
  "openapi": "3.1.0",
  "info": {
    "title": "glu-server",
    "version": "0.1.0"
  },
  "paths": {
    "/api/integrations/{user_id}": {
      "get": {
        "summary": "Get Integrations",
        "operationId": "get_integrations_api_integrations__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserIntegrationListResponse"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/{integration_id}": {
      "get": {
        "summary": "Get Integration",
        "operationId": "get_integration_api_integrations__integration_id__get",
        "parameters": [
          {
            "name": "integration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Integration Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserIntegrationResponse"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{user_id}/integrations": {
      "post": {
        "summary": "Create User Integration",
        "operationId": "create_user_integration_api_users__user_id__integrations_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserIntegrationCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserIntegrationResponse"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/{user_id}/sync": {
      "post": {
        "summary": "Sync Integrations",
        "operationId": "sync_integrations_api_integrations__user_id__sync_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserIntegrationListResponse"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "post": {
        "summary": "Create User",
        "operationId": "create_user_api_users_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{user_id}": {
      "get": {
        "summary": "Get User",
        "operationId": "get_user_api_users__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/messages/users/{user_id}/conversations": {
      "post": {
        "summary": "Create Conversation",
        "description": "Creates a new conversation for a user.",
        "operationId": "createConversation",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the user who owns the conversation",
              "title": "User Id"
            },
            "description": "ID of the user who owns the conversation"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/messages/users/{user_id}/chats/{chat_id}": {
      "post": {
        "summary": "Update Conversation",
        "operationId": "updateConversation",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the user",
              "title": "User Id"
            },
            "description": "ID of the user"
          },
          {
            "name": "chat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the chat",
              "title": "Chat Id"
            },
            "description": "ID of the chat"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConversationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatCompletion"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/messages/users/{user_id}/chats/{chat_id}/confirm-tool-call": {
      "post": {
        "summary": "Confirm Tool Call",
        "description": "Finalizes a pending write tool call.\nThe user sends updated tool call arguments for verification.\nThis endpoint executes the tool call with the updated arguments and then continues the conversation.",
        "operationId": "confirmToolCall",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the user",
              "title": "User Id"
            },
            "description": "ID of the user"
          },
          {
            "name": "chat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the chat",
              "title": "Chat Id"
            },
            "description": "ID of the chat"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmToolCallRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatCompletion"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "root"
        ],
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthType": {
        "type": "string",
        "enum": [
          "api_key",
          "oauth",
          "bearer",
          "none"
        ],
        "title": "AuthType"
      },
      "ChatCompletion": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "choices": {
            "items": {
              "$ref": "#/components/schemas/Choice"
            },
            "type": "array",
            "title": "Choices"
          },
          "created": {
            "type": "integer",
            "title": "Created"
          },
          "model": {
            "type": "string",
            "title": "Model"
          },
          "object": {
            "type": "string",
            "const": "chat.completion",
            "title": "Object"
          },
          "service_tier": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "scale",
                  "default"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Tier"
          },
          "system_fingerprint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Fingerprint"
          },
          "usage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CompletionUsage"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "choices",
          "created",
          "model",
          "object"
        ],
        "title": "ChatCompletion"
      },
      "ChatCompletionAudio": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "data": {
            "type": "string",
            "title": "Data"
          },
          "expires_at": {
            "type": "integer",
            "title": "Expires At"
          },
          "transcript": {
            "type": "string",
            "title": "Transcript"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "data",
          "expires_at",
          "transcript"
        ],
        "title": "ChatCompletionAudio"
      },
      "ChatCompletionMessage": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "refusal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refusal"
          },
          "role": {
            "type": "string",
            "const": "assistant",
            "title": "Role"
          },
          "audio": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChatCompletionAudio"
              },
              {
                "type": "null"
              }
            ]
          },
          "function_call": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FunctionCall"
              },
              {
                "type": "null"
              }
            ]
          },
          "tool_calls": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ChatCompletionMessageToolCall"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Calls"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "role"
        ],
        "title": "ChatCompletionMessage"
      },
      "ChatCompletionMessageToolCall": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "function": {
            "$ref": "#/components/schemas/Function"
          },
          "type": {
            "type": "string",
            "const": "function",
            "title": "Type"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "function",
          "type"
        ],
        "title": "ChatCompletionMessageToolCall"
      },
      "ChatCompletionTokenLogprob": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "bytes": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bytes"
          },
          "logprob": {
            "type": "number",
            "title": "Logprob"
          },
          "top_logprobs": {
            "items": {
              "$ref": "#/components/schemas/TopLogprob"
            },
            "type": "array",
            "title": "Top Logprobs"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "token",
          "logprob",
          "top_logprobs"
        ],
        "title": "ChatCompletionTokenLogprob"
      },
      "Choice": {
        "properties": {
          "finish_reason": {
            "type": "string",
            "enum": [
              "stop",
              "length",
              "tool_calls",
              "content_filter",
              "function_call"
            ],
            "title": "Finish Reason"
          },
          "index": {
            "type": "integer",
            "title": "Index"
          },
          "logprobs": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChoiceLogprobs"
              },
              {
                "type": "null"
              }
            ]
          },
          "message": {
            "$ref": "#/components/schemas/ChatCompletionMessage"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "finish_reason",
          "index",
          "message"
        ],
        "title": "Choice"
      },
      "ChoiceLogprobs": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ChatCompletionTokenLogprob"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "refusal": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ChatCompletionTokenLogprob"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refusal"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "ChoiceLogprobs"
      },
      "CompletionTokensDetails": {
        "properties": {
          "accepted_prediction_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accepted Prediction Tokens"
          },
          "audio_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Tokens"
          },
          "reasoning_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reasoning Tokens"
          },
          "rejected_prediction_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rejected Prediction Tokens"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "CompletionTokensDetails"
      },
      "CompletionUsage": {
        "properties": {
          "completion_tokens": {
            "type": "integer",
            "title": "Completion Tokens"
          },
          "prompt_tokens": {
            "type": "integer",
            "title": "Prompt Tokens"
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens"
          },
          "completion_tokens_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CompletionTokensDetails"
              },
              {
                "type": "null"
              }
            ]
          },
          "prompt_tokens_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptTokensDetails"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "completion_tokens",
          "prompt_tokens",
          "total_tokens"
        ],
        "title": "CompletionUsage"
      },
      "ConfirmToolCallRequest": {
        "properties": {
          "tool_hit": {
            "type": "object",
            "title": "Tool Hit",
            "description": "Tool hit data (typically the search hit from Meilisearch) needed to setup the tool client."
          },
          "tool_call": {
            "type": "object",
            "title": "Tool Call",
            "description": "Original tool call details with id and tool_name as returned in the verification response."
          },
          "updated_arguments": {
            "type": "object",
            "title": "Updated Arguments",
            "description": "Updated tool arguments provided by the user for final execution."
          },
          "messages": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Messages",
            "description": "The conversation messages so far including the pending tool call message."
          }
        },
        "type": "object",
        "required": [
          "tool_hit",
          "tool_call",
          "updated_arguments",
          "messages"
        ],
        "title": "ConfirmToolCallRequest"
      },
      "DatabaseStatus": {
        "properties": {
          "connected": {
            "type": "boolean",
            "title": "Connected"
          },
          "info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Info"
          },
          "async_": {
            "type": "boolean",
            "title": "Async",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "connected",
          "info"
        ],
        "title": "DatabaseStatus"
      },
      "ErrorResponse": {
        "properties": {
          "detail": {
            "type": "string",
            "title": "Detail",
            "description": "Error message"
          },
          "code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code",
            "description": "Error code"
          }
        },
        "type": "object",
        "required": [
          "detail"
        ],
        "title": "ErrorResponse"
      },
      "Function": {
        "properties": {
          "arguments": {
            "type": "string",
            "title": "Arguments"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "arguments",
          "name"
        ],
        "title": "Function"
      },
      "FunctionCall": {
        "properties": {
          "arguments": {
            "type": "string",
            "title": "Arguments"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "arguments",
          "name"
        ],
        "title": "FunctionCall"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthCheckResponse": {
        "properties": {
          "database": {
            "$ref": "#/components/schemas/DatabaseStatus"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "healthy": {
            "type": "boolean",
            "title": "Healthy"
          }
        },
        "type": "object",
        "required": [
          "database",
          "message",
          "healthy"
        ],
        "title": "HealthCheckResponse"
      },
      "IntegrationCategory": {
        "type": "string",
        "enum": [
          "code",
          "tickets",
          "email",
          "storage",
          "calendar",
          "media",
          "communication"
        ],
        "title": "IntegrationCategory"
      },
      "IntegrationResponse": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted",
            "default": false
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Integration's unique identifier"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name of the integration"
          },
          "clerk_name": {
            "type": "string",
            "title": "Clerk Name",
            "description": "Clerk identifier for the integration"
          },
          "base_host": {
            "type": "string",
            "title": "Base Host",
            "description": "Base URL for the integration API"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Description of the integration"
          },
          "keywords": {
            "type": "string",
            "title": "Keywords",
            "description": "Comma-separated keywords"
          },
          "category": {
            "$ref": "#/components/schemas/IntegrationCategory",
            "description": "Category of the integration"
          },
          "logo": {
            "type": "string",
            "title": "Logo",
            "description": "S3 URL for the integration logo"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "description": "Version of the integration"
          },
          "schema": {
            "type": "string",
            "title": "Schema",
            "description": "S3 URL for the integration schema"
          },
          "auth_type": {
            "$ref": "#/components/schemas/AuthType",
            "description": "Authentication type"
          },
          "spec": {
            "type": "string",
            "title": "Spec",
            "description": "S3 URL for the integration specification"
          }
        },
        "type": "object",
        "required": [
          "created_at",
          "updated_at",
          "id",
          "name",
          "clerk_name",
          "base_host",
          "description",
          "keywords",
          "category",
          "logo",
          "version",
          "schema",
          "auth_type",
          "spec"
        ],
        "title": "IntegrationResponse"
      },
      "Message": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted",
            "default": false
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "ID of the user who initiated the message"
          },
          "integration_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Integration Id",
            "description": "ID of the integration used, if any"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time",
            "description": "When the message processing started"
          },
          "initial_input": {
            "type": "string",
            "title": "Initial Input",
            "description": "The initial input of the message"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time",
            "description": "When the message processing completed"
          },
          "latency": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency",
            "description": "Processing time in seconds"
          },
          "result": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result",
            "description": "The processed result of the message"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "created_at",
          "updated_at",
          "initial_input",
          "id"
        ],
        "title": "Message"
      },
      "MessageCreate": {
        "properties": {
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "ID of the user who initiated the message"
          },
          "integration_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Integration Id",
            "description": "ID of the integration used, if any"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time",
            "description": "When the message processing started"
          },
          "initial_input": {
            "type": "string",
            "title": "Initial Input",
            "description": "The initial input of the message"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time",
            "description": "When the message processing completed"
          },
          "latency": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency",
            "description": "Processing time in seconds"
          },
          "result": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result",
            "description": "The processed result of the message"
          }
        },
        "type": "object",
        "required": [
          "initial_input"
        ],
        "title": "MessageCreate"
      },
      "PromptTokensDetails": {
        "properties": {
          "audio_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Tokens"
          },
          "cached_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cached Tokens"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "PromptTokensDetails"
      },
      "TopLogprob": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "bytes": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bytes"
          },
          "logprob": {
            "type": "number",
            "title": "Logprob"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "token",
          "logprob"
        ],
        "title": "TopLogprob"
      },
      "UpdateConversationRequest": {
        "properties": {
          "messages": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Messages",
            "description": "List of messages in the conversation"
          }
        },
        "type": "object",
        "required": [
          "messages"
        ],
        "title": "UpdateConversationRequest"
      },
      "UserCreateRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "User's full name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "User's email address"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserRole"
              },
              {
                "type": "null"
              }
            ],
            "description": "User's role in the system",
            "default": "user"
          }
        },
        "type": "object",
        "required": [
          "name",
          "email"
        ],
        "title": "UserCreateRequest"
      },
      "UserIntegration": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted",
            "default": false
          },
          "integration_id": {
            "type": "string",
            "format": "uuid",
            "title": "Integration Id"
          },
          "clerk_id": {
            "type": "string",
            "title": "Clerk Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "created_at",
          "updated_at",
          "integration_id",
          "clerk_id",
          "user_id",
          "id"
        ],
        "title": "UserIntegration"
      },
      "UserIntegrationCreateRequest": {
        "properties": {
          "integration_id": {
            "type": "string",
            "format": "uuid",
            "title": "Integration Id",
            "description": "UUID of the integration to connect"
          },
          "clerk_id": {
            "type": "string",
            "title": "Clerk Id",
            "description": "Clerk identifier for the integration instance"
          }
        },
        "type": "object",
        "required": [
          "integration_id",
          "clerk_id"
        ],
        "title": "UserIntegrationCreateRequest"
      },
      "UserIntegrationListResponse": {
        "properties": {
          "user_integrations": {
            "items": {
              "$ref": "#/components/schemas/UserIntegration"
            },
            "type": "array",
            "title": "User Integrations"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of user integrations"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number"
          },
          "pages": {
            "type": "integer",
            "title": "Pages",
            "description": "Total number of pages"
          }
        },
        "type": "object",
        "required": [
          "user_integrations",
          "total",
          "page",
          "pages"
        ],
        "title": "UserIntegrationListResponse"
      },
      "UserIntegrationResponse": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted",
            "default": false
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "User integration's unique identifier"
          },
          "integration_id": {
            "type": "string",
            "format": "uuid",
            "title": "Integration Id",
            "description": "Associated integration ID"
          },
          "clerk_id": {
            "type": "string",
            "title": "Clerk Id",
            "description": "Clerk identifier for the integration instance"
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "Associated user ID"
          },
          "integration": {
            "$ref": "#/components/schemas/IntegrationResponse",
            "description": "Integration details"
          }
        },
        "type": "object",
        "required": [
          "created_at",
          "updated_at",
          "id",
          "integration_id",
          "clerk_id",
          "user_id",
          "integration"
        ],
        "title": "UserIntegrationResponse"
      },
      "UserResponse": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted",
            "default": false
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "User's unique identifier"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "User's full name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "User's email address"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole",
            "description": "User's role in the system"
          }
        },
        "type": "object",
        "required": [
          "created_at",
          "updated_at",
          "id",
          "name",
          "email",
          "role"
        ],
        "title": "UserResponse"
      },
      "UserRole": {
        "type": "string",
        "enum": [
          "admin",
          "premium",
          "user"
        ],
        "title": "UserRole"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}